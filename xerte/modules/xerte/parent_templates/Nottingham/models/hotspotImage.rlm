	<PG name="hotspotImage">		<SCR name="getPageID"><![CDATA[pageIcon = icon.parentNode.clip();myXML = new XML(extXML.firstChild.childNodes[rootIcon.getPageIndex() - pgOffset]);pageIcon.templateData = myXML.toObject();rootIcon.setTitleText(templateData.learningObject[0].name);hicol = pageIcon.templateData.hotspotImage[0].hicol;if (pageIcon.templateData.hotspotImage[0].narration != undefined){  narration = pageIcon.templateData.hotspotImage[0].narration;  rootIcon.broadcast('showAudio');}]]></SCR>		<DIS h="474" w="760" tabIndex="-1" id="panel" name="panel" x="20" y="20" type="ext" url="templatePath + 'common/whitePanel.swf'"><![CDATA[]]></DIS>		<DIS toolTip="{pageIcon.templateData.hotspotImage[0].tip}" scrolling="auto" id="graphic" name="graphic" x="coded" y="30" type="ext" url="{pageIcon.templateData.hotspotImage[0].url}"><![CDATA[{pageIcon.templateData.page[0].text[0].tip}]]></DIS>		<INT name="loadImage" perpetual="0">			<RES name="onLoad" type="event" eventName="onLoad" icon="graphic" erase="1" exit="1">				<SCR name="calculate"><![CDATA[//resize the image if it's too big or too widep = graphic._width / graphic._height;maxWidth = 500;maxHeight = 424;scale = 1;initHeight = graphic._height;initWidth = graphic._width;graphic.constrain(maxWidth, maxHeight);scale = graphic._width / initWidth;if (pageIcon.templateData.hotspotImage[0].align == 'Left'){  graphic._x = 770 - graphic._width;  textX = 30;} else {  graphic._x = 30;  textX = 50 + graphic._width;}textWidth = 720 - graphic._width;]]></SCR>			</RES>		</INT>		<DIS textColour="#333333" id="textBlock" h="10" name="text" x="textX" y="30" w="textWidth" type="text"><![CDATA[{pageIcon.templateData.hotspotImage[0].text}]]></DIS>		<SCR name="makeHotspots"><![CDATA[hsData = pageIcon.templateData.hotspotImage[0];if (pageIcon.templateData.hotspotImage[0].highlight == 'true'){  icon.nextSibling.firstChild.attributes.highlight = '1';  icon.nextSibling.firstChild.attributes.highlightColour = hicol;}if (icon.attributes.built != "true"){  icon.nextSibling.firstChild.duplicate(pageIcon.templateData.hotspotImage[0].hotspot.length - 1);    //show the controllers?  if (pageIcon.templateData.hotspotImage[0].interactivity != 'Show Me' && icon.attributes.built != "true"){    icon.nextSibling.lastChild.removeNode();    icon.nextSibling.lastChild.removeNode();  }}icon.attributes.built = "true";fbY = _ytile + 20;fbH = 454 - fbY;currentHS = -1;]]></SCR>		<INT id="hspot" name="hotspots" perpetual="0">			<RES highlightColour="0xFF0000" name="protoHotpot" type="hotSpot" x="graphic._x + Number(hsData.hotspot[icon.index()].x)*scale" y="graphic._y + Number(hsData.hotspot[icon.index()].y)*scale" w="Number(hsData.hotspot[icon.index()].w)*scale" h="Number(hsData.hotspot[icon.index()].h)*scale" click="1" cursor="1" erase="1" exit="0">				<DIS textColour="#333333" id="fb" scrolling="auto" name="protoText" x="textX + 5" y="fbY" w="textWidth - 5" h="fbH + 30" type="text"><![CDATA[{'<b>' + hsData.hotspot[icon.parentNode.index()].name + '</b><br>' +  hsData.hotspot[icon.parentNode.index()].text}]]></DIS>				<SCR name="handleClick"><![CDATA[currentHS = icon.parentNode.index();hs = hspot.responses[icon.parentNode.index()];hspot.clear();hspot.lineStyle(2,hicol,100);hspot.drawRect(hs._x, hs._y, hs._width, hs._height);//fb.setText('<b>' + hsData.hotspot[icon.parentNode.index()].name + '</b><br>' +  hsData.hotspot[icon.parentNode.index()].text);fb.clear();fb.beginFill(0xFFFFCC,100);fb.lineStyle(1,0x666666,100);fb.drawRect(-5,-0,textWidth, fbH + 30);fb.fade('in', 0.3, 'None', 'easeNone',2);]]></SCR>			</RES>			<RES toolTip="Previous" swf="templatePath + 'common/leftButton.swf'" name="back" type="button" x="graphic._x + graphic._width - 40" y="graphic._y + graphic._height + 10" label="back" erase="1" exit="0">				<SCR name="setup"><![CDATA[if (currentHS > 0){  currentHS--;}]]></SCR>				<DIS id="fb" scrolling="auto" name="protoText" x="textX + 5" y="fbY" w="textWidth - 5" h="fbH + 30" type="text"><![CDATA[{'<b>' + hsData.hotspot[currentHS].name + '</b><br>' +  hsData.hotspot[currentHS].text}]]></DIS>				<SCR name="showPrev"><![CDATA[hs = hspot.responses[currentHS];hspot.clear();hspot.lineStyle(2,0xFFFF00,100);hspot.drawRect(hs._x, hs._y, hs._width, hs._height);fb.clear();fb.beginFill(0xFFFFCC,100);fb.lineStyle(1,0x666666,100);fb.drawRect(-5,-0,textWidth, fbH + 30);fb.fade('in', 0.3, 'None', 'easeNone',2);]]></SCR>			</RES>			<RES toolTip="Next" swf="templatePath + 'common/rightButton.swf'" name="next" type="button" x="graphic._x + graphic._width - 20" y="graphic._y + graphic._height + 10" label="next" erase="1" exit="0">				<SCR name="setup"><![CDATA[if (currentHS < hsData.hotspot.length - 1){  currentHS++;}]]></SCR>				<DIS id="fb" scrolling="auto" name="protoText" x="textX + 5" y="fbY" w="textWidth - 5" h="fbH + 30" type="text"><![CDATA[{'<b>' + hsData.hotspot[currentHS].name + '</b><br>' +  hsData.hotspot[currentHS].text}]]></DIS>				<SCR name="showNext"><![CDATA[hs = hspot.responses[currentHS];hspot.clear();hspot.lineStyle(2,0xFFFF00,100);hspot.drawRect(hs._x, hs._y, hs._width, hs._height);fb.clear();fb.beginFill(0xFFFFCC,100);fb.lineStyle(1,0x666666,100);fb.drawRect(-5,-0,textWidth, fbH + 30);fb.fade('in', 0.3, 'None', 'easeNone',2);]]></SCR>			</RES>		</INT>	</PG>